/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as WorkflowInstancesIndexImport } from './routes/workflowInstances/index'
import { Route as WorkflowInstancesInstanceIdImport } from './routes/workflowInstances/$instanceId'
import { Route as AdminWorkflowWorkflowIdEditImport } from './routes/admin/workflow/$workflowId/edit'
import { Route as AdminWorkflowWorkflowIdFormsIndexImport } from './routes/admin/workflow/$workflowId/forms/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkflowInstancesIndexRoute = WorkflowInstancesIndexImport.update({
  id: '/workflowInstances/',
  path: '/workflowInstances/',
  getParentRoute: () => rootRoute,
} as any)

const WorkflowInstancesInstanceIdRoute =
  WorkflowInstancesInstanceIdImport.update({
    id: '/workflowInstances/$instanceId',
    path: '/workflowInstances/$instanceId',
    getParentRoute: () => rootRoute,
  } as any)

const AdminWorkflowWorkflowIdEditRoute =
  AdminWorkflowWorkflowIdEditImport.update({
    id: '/admin/workflow/$workflowId/edit',
    path: '/admin/workflow/$workflowId/edit',
    getParentRoute: () => rootRoute,
  } as any)

const AdminWorkflowWorkflowIdFormsIndexRoute =
  AdminWorkflowWorkflowIdFormsIndexImport.update({
    id: '/admin/workflow/$workflowId/forms/',
    path: '/admin/workflow/$workflowId/forms/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/workflowInstances/$instanceId': {
      id: '/workflowInstances/$instanceId'
      path: '/workflowInstances/$instanceId'
      fullPath: '/workflowInstances/$instanceId'
      preLoaderRoute: typeof WorkflowInstancesInstanceIdImport
      parentRoute: typeof rootRoute
    }
    '/workflowInstances/': {
      id: '/workflowInstances/'
      path: '/workflowInstances'
      fullPath: '/workflowInstances'
      preLoaderRoute: typeof WorkflowInstancesIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/workflow/$workflowId/edit': {
      id: '/admin/workflow/$workflowId/edit'
      path: '/admin/workflow/$workflowId/edit'
      fullPath: '/admin/workflow/$workflowId/edit'
      preLoaderRoute: typeof AdminWorkflowWorkflowIdEditImport
      parentRoute: typeof rootRoute
    }
    '/admin/workflow/$workflowId/forms/': {
      id: '/admin/workflow/$workflowId/forms/'
      path: '/admin/workflow/$workflowId/forms'
      fullPath: '/admin/workflow/$workflowId/forms'
      preLoaderRoute: typeof AdminWorkflowWorkflowIdFormsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/workflowInstances/$instanceId': typeof WorkflowInstancesInstanceIdRoute
  '/workflowInstances': typeof WorkflowInstancesIndexRoute
  '/admin/workflow/$workflowId/edit': typeof AdminWorkflowWorkflowIdEditRoute
  '/admin/workflow/$workflowId/forms': typeof AdminWorkflowWorkflowIdFormsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/workflowInstances/$instanceId': typeof WorkflowInstancesInstanceIdRoute
  '/workflowInstances': typeof WorkflowInstancesIndexRoute
  '/admin/workflow/$workflowId/edit': typeof AdminWorkflowWorkflowIdEditRoute
  '/admin/workflow/$workflowId/forms': typeof AdminWorkflowWorkflowIdFormsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/workflowInstances/$instanceId': typeof WorkflowInstancesInstanceIdRoute
  '/workflowInstances/': typeof WorkflowInstancesIndexRoute
  '/admin/workflow/$workflowId/edit': typeof AdminWorkflowWorkflowIdEditRoute
  '/admin/workflow/$workflowId/forms/': typeof AdminWorkflowWorkflowIdFormsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/workflowInstances/$instanceId'
    | '/workflowInstances'
    | '/admin/workflow/$workflowId/edit'
    | '/admin/workflow/$workflowId/forms'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/workflowInstances/$instanceId'
    | '/workflowInstances'
    | '/admin/workflow/$workflowId/edit'
    | '/admin/workflow/$workflowId/forms'
  id:
    | '__root__'
    | '/'
    | '/workflowInstances/$instanceId'
    | '/workflowInstances/'
    | '/admin/workflow/$workflowId/edit'
    | '/admin/workflow/$workflowId/forms/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WorkflowInstancesInstanceIdRoute: typeof WorkflowInstancesInstanceIdRoute
  WorkflowInstancesIndexRoute: typeof WorkflowInstancesIndexRoute
  AdminWorkflowWorkflowIdEditRoute: typeof AdminWorkflowWorkflowIdEditRoute
  AdminWorkflowWorkflowIdFormsIndexRoute: typeof AdminWorkflowWorkflowIdFormsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WorkflowInstancesInstanceIdRoute: WorkflowInstancesInstanceIdRoute,
  WorkflowInstancesIndexRoute: WorkflowInstancesIndexRoute,
  AdminWorkflowWorkflowIdEditRoute: AdminWorkflowWorkflowIdEditRoute,
  AdminWorkflowWorkflowIdFormsIndexRoute:
    AdminWorkflowWorkflowIdFormsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/workflowInstances/$instanceId",
        "/workflowInstances/",
        "/admin/workflow/$workflowId/edit",
        "/admin/workflow/$workflowId/forms/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/workflowInstances/$instanceId": {
      "filePath": "workflowInstances/$instanceId.tsx"
    },
    "/workflowInstances/": {
      "filePath": "workflowInstances/index.tsx"
    },
    "/admin/workflow/$workflowId/edit": {
      "filePath": "admin/workflow/$workflowId/edit.tsx"
    },
    "/admin/workflow/$workflowId/forms/": {
      "filePath": "admin/workflow/$workflowId/forms/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
